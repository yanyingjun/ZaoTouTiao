<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhishun.zaotoutiao.dal.mapper.UserReadRecordMapper">
  <resultMap id="BaseResultMap" type="com.zhishun.zaotoutiao.core.model.vo.UserReadRecordVO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="userId" jdbcType="BIGINT" property="userId" />
    <result column="infoId" jdbcType="VARCHAR" property="infoId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="infoType" jdbcType="VARCHAR" property="infoType" />
    <result column="read_continuous_day" jdbcType="INTEGER" property="readContinuousDay" />
    <result column="is_request_gold" jdbcType="INTEGER" property="isRequestGold" />
    <result column="channelId" jdbcType="VARCHAR" property="channelId" />
    <result column="label" jdbcType="VARCHAR" property="label"/>
    <result column="title" jdbcType="VARCHAR" property="title"/>
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="imgUrl" jdbcType="VARCHAR" property="imgUrl" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="browsing" jdbcType="INTEGER" property="browsing" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userId, infoId, date_format(create_date, '%Y-%m-%d %H:%i:%s') as createDate, infoType, read_continuous_day, is_request_gold, channelId, label, title, source, imgUrl, url, browsing
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_read_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_read_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zhishun.zaotoutiao.core.model.entity.UserReadRecord">
    insert into user_read_record (id, userId, infoId, 
      create_date, infoType, read_continuous_day, 
      is_request_gold, channelId, label, title, source, imgUrl, url, browsing)
    values (#{id,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, #{infoid,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{infotype,jdbcType=VARCHAR}, #{readContinuousDay,jdbcType=INTEGER}, 
      #{isRequestGold,jdbcType=INTEGER},#{channelId,jdbcType=VARCHAR},#{label,jdbcType=VARCHAR},
      #{title,jdbcType=VARCHAR},#{source,jdbcType=VARCHAR},#{imgUrl,jdbcType=VARCHAR},#{url,jdbcType=VARCHAR},#{browsing,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zhishun.zaotoutiao.core.model.entity.UserReadRecord">
    insert into user_read_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="infoId != null">
        infoId,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="infoType != null">
        infoType,
      </if>
      <if test="readContinuousDay != null">
        read_continuous_day,
      </if>
      <if test="isRequestGold != null">
        is_request_gold,
      </if>
        <if test="channelId != null">
            channelId,
        </if>
        <if test="label != null">
            label,
        </if>
        <if test="title != null">
            title,
        </if>
        <if test="source != null">
            source,
        </if>
      <if test="imgUrl != null">
        imgUrl,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="browsing != null">
        browsing,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="infoId != null">
        #{infoId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="infoType != null">
        #{infoType,jdbcType=VARCHAR},
      </if>
      <if test="readContinuousDay != null">
        #{readContinuousDay,jdbcType=INTEGER},
      </if>
      <if test="isRequestGold != null">
        #{isRequestGold,jdbcType=INTEGER},
      </if>
        <if test="channelId != null">
            #{channelId,jdbcType=VARCHAR},
        </if>
        <if test="label != null">
            #{label,jdbcType=VARCHAR},
        </if>
        <if test="title != null">
            #{title,jdbcType=VARCHAR},
        </if>
        <if test="source != null">
            #{source,jdbcType=VARCHAR},
        </if>
      <if test="imgUrl != null">
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="browsing != null">
        #{browsing,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhishun.zaotoutiao.core.model.entity.UserReadRecord">
    update user_read_record
    <set>
      <if test="userId != null">
        userId = #{userId,jdbcType=BIGINT},
      </if>
      <if test="infoId != null">
        infoId = #{infoId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="infoType != null">
        infoType = #{infoType,jdbcType=VARCHAR},
      </if>
      <if test="readContinuousDay != null">
        read_continuous_day = #{readContinuousDay,jdbcType=INTEGER},
      </if>
      <if test="isRequestGold != null">
        is_request_gold = #{isRequestGold,jdbcType=INTEGER},
      </if>
        <if test="channelId != null">
            channelId = #{channelId,jdbcType=VARCHAR},
        </if>
        <if test="label != null">
            label = #{label,jdbcType=VARCHAR},
        </if>
        <if test="title != null">
            title = #{title,jdbcType=VARCHAR},
        </if>
        <if test="source != null">
            source = #{source,jdbcType=VARCHAR},
        </if>
      <if test="imgUrl != null">
        imgUrl = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="browsing != null">
        browsing = #{browsing,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhishun.zaotoutiao.core.model.entity.UserReadRecord">
    update user_read_record
    set userId = #{userId,jdbcType=BIGINT},
      infoId = #{infoId,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      infoType = #{infoType,jdbcType=VARCHAR},
      read_continuous_day = #{readContinuousDay,jdbcType=INTEGER},
      is_request_gold = #{isRequestGold,jdbcType=INTEGER},
      channelId = #{channelId,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      imgUrl = #{imgUrl,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      browsing = #{browsing,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getUserReadRecord" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_read_record
    <where>
      <if test="userId != null">
        userId = #{userId}
      </if>
      <if test="infoId != null">
        and infoId = #{infoId}
      </if>
      <if test="isRequestGold != null">
        and is_request_gold = #{isRequestGold}
      </if>
      <if test="createDate != null">
        and TO_DAYS( NOW( ) ) - TO_DAYS( create_date) = 0
      </if>
    </where>
  </select>

  <select id="getUserReadRecordByInfoId" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_read_record
    where infoId = #{infoId}
  </select>

  <select id="updateReadRecord" parameterType="com.zhishun.zaotoutiao.core.model.entity.UserReadRecord" resultMap="BaseResultMap">
    update SET is_request_gold = #{isRequestGold}
    where userId = #{userId} and infoId = #{infoId}
  </select>

  <select id="isReadThreeToday" parameterType="long" resultMap="BaseResultMap">
    SELECT * FROM user_read_record WHERE userId = #{userId} AND  TO_DAYS( NOW( ) ) - TO_DAYS( create_date) &lt;= 0
  </select>

  <select id="isReadFive" parameterType="long" resultMap="BaseResultMap">
    SELECT * FROM user_read_record WHERE userId = #{userId}
  </select>

  <delete id="delUserReadRecord" parameterType="java.lang.Long">
    delete from user_read_record
    where userId = #{userId}
  </delete>

  <select id="isRead" parameterType="map" resultType="int">
    SELECT count(0)
    from user_read_record
    WHERE  userId = #{userId} AND infoId = #{infoId}
  </select>

  <select id="isContinuousReadYesterday" parameterType="Long" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from user_read_record WHERE TO_DAYS( NOW( ) ) - TO_DAYS( create_date) &lt;= 1 AND userId = #{userId}
  </select>

  <insert id="addLookRecord" parameterType="map">
    INSERT INTO user_read_record(userId,infoId,infoType,read_continuous_day,channelId,label,title,source) VALUES (#{userId},#{infoId},#{infoType},#{readContinuousDay},#{channelId},#{label},#{title},#{source})
  </insert>

  <select id="isContinuousReadToday" parameterType="Long" resultType="int">
    SELECT COUNT(0)
    FROM user_read_record WHERE TO_DAYS( NOW( ) ) - TO_DAYS( create_date) &lt;= 0 AND userId = #{userId}
  </select>


  <select id="listLookRecordPage" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_read_record
    WHERE userId = #{userId} ORDER BY create_date desc
    <if test="offset != null and limit != null">
      limit #{offset},#{limit}
    </if>
  </select>

  <select id="countLookRecord" parameterType="map" resultType="int">
    select count(id)
    from user_read_record
    WHERE userId = #{userId} ORDER BY create_date desc
  </select>

  <select id="maxReadRecord" parameterType="long" resultMap="BaseResultMap">
    SELECT max(create_date),browsing
    from user_read_record
    WHERE userId = #{userId} and create_date= (select MAX(create_date) from  user_read_record where userId = #{userId})
  </select>

  <select id="list4Nav" parameterType="map" resultType="com.zhishun.zaotoutiao.core.model.vo.NavigationVO">
    select count(r.channelId) as readNum,c.name as name,c.id,c.parentId
    from user_read_record as r
    JOIN channels as c
    ON r.channelId = c.channelId
    WHERE r.infoType = #{infoType}
    AND c.parentId = #{parentId}
    <if test="date != null">
      AND date( #{date} ) = date(r.create_date)
    </if>
    <if test="date == null and dateNum != null">
      AND DATE_SUB(CURDATE(),INTERVAL #{dateNum} DAY) &lt;= date(r.create_date)
    </if>
    GROUP BY r.channelId
    ORDER BY readNum DESC;
  </select>

  <select id="getNavReadNum" parameterType="Long" resultType="Long">
    select count(r.channelId) as readNum
    FROM user_read_record as r
    JOIN channels as c
    ON r.channelId = c.channelId
    WHERE c.parentId in(select id from channels WHERE parentId = #{parentId})
    <if test="date != null">
      AND date( #{date} ) = date(r.create_date)
    </if>
    <if test="date == null and dateNum != null">
      AND DATE_SUB(CURDATE(),INTERVAL #{dateNum} DAY) &lt;= date(r.create_date)
    </if>
  </select>

  <select id="getFirstTabNum" parameterType="Long" resultType="Long">
    SELECT count(r.channelId) as readNum
    FROM user_read_record as r
    JOIN channels as c
    ON r.channelId = c.channelId
    WHERE c.parentId = #{parentId}
    <if test="date != null">
      AND date( #{date} ) = date(r.create_date)
    </if>
    <if test="date == null and dateNum != null">
      AND DATE_SUB(CURDATE(),INTERVAL #{dateNum} DAY) &lt;= date(r.create_date)
    </if>
  </select>

  <select id="getMyCommentsList" parameterType="long" resultMap="BaseResultMap">
    SELECT user_comments.content,user_comments.likes,user_read_record.*,channels.name as type,user.address, user_give_like.is_like as isLike
    FROM user_read_record RIGHT JOIN user_comments ON user_comments.info_id = user_read_record.infoId
    left join channels ON channels.channelId = user_read_record.channelId
    left JOIN user ON user_comments.user_id = user.userId
    LEFT JOIN user_give_like ON user_comments.id = user_give_like.commentsId
    WHERE user.userId = #{userId}
    <if test="offset != null and limit != null">
      limit #{offset},#{limit}
    </if>
  </select>

  <select id="getSecondTabNum" parameterType="Long" resultType="Long">
    SELECT count(channelId) as readNum
    FROM user_read_record
    WHERE channelId in(select channelId from channels where id = #{id})
    <if test="date != null">
      AND date( #{date} ) = date(create_date)
    </if>
    <if test="date == null and dateNum != null">
      AND DATE_SUB(CURDATE(),INTERVAL #{dateNum} DAY) &lt;= date(create_date)
    </if>
  </select>

  <select id="getInfoId2RankTop30" parameterType="map" resultType="java.lang.String">
    SELECT infoId
    FROM user_read_record
    WHERE channelId in(select channelId from channels where parentId in(select id from channels where parentId = #{navId}))
    <if test="date != null">
      AND date( #{date} ) = date(create_date)
    </if>
    <if test="date == null and dateNum != null">
      AND DATE_SUB(CURDATE(),INTERVAL #{dateNum} DAY) &lt;= date(create_date)
    </if>
    group by infoId
    order by count(infoId) desc
    limit 30
  </select>

  <select id="getInfoId2RankTop30ByFirst" parameterType="map" resultType="java.lang.String">
    select infoId
    from user_read_record
    where channelId in( select channelId from channels where parentId = #{navId})
    <if test="date != null">
      AND date( #{date} ) = date(create_date)
    </if>
    <if test="date == null and dateNum != null">
      AND DATE_SUB(CURDATE(),INTERVAL #{dateNum} DAY) &lt;= date(create_date)
    </if>
    group by infoId
    order by count(infoId) desc
    limit 30
  </select>

  <select id="getInfoId2RankTop30BySecond" parameterType="map" resultType="java.lang.String">
    SELECT infoId
    from user_read_record
    where channelId in(SELECT channelId from channels where id = #{navId})
    <if test="date != null">
      AND date( #{date} ) = date(create_date)
    </if>
    <if test="date == null and dateNum != null">
      AND DATE_SUB(CURDATE(),INTERVAL #{dateNum} DAY) &lt;= date(create_date)
    </if>
    group by infoId
    order by count(infoId) desc
    limit 30
  </select>

  <select id="getReadNumByOneInfo" parameterType="String" resultType="Long">
    SELECT count(infoId)
    FROM user_read_record
    WHERE infoId = #{infoId}
    <if test="date != null">
      AND date( #{date} ) = date(create_date)
    </if>
    <if test="date == null and dateNum != null">
      AND DATE_SUB(CURDATE(),INTERVAL #{dateNum} DAY) &lt;= date(create_date)
    </if>
  </select>
</mapper>