<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhishun.zaotoutiao.dal.mapper.ChannelsMapper" >
  <resultMap id="BaseResultMap" type="com.zhishun.zaotoutiao.core.model.entity.Channels" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="channelId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="channelOrder" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="channelType" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_date" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_date" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, channelId, name, channelOrder, channelType, create_date, update_time, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from channels
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from channels
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zhishun.zaotoutiao.core.model.entity.Channels" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into channels (id, channelId, name, 
      channelOrder, channelType, create_date, update_time, status
      )
    values (#{id,jdbcType=BIGINT}, #{channelId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
      #{channelOrder,jdbcType=INTEGER}, #{channelType,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP},
      #{updateDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhishun.zaotoutiao.core.model.entity.Channels" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into channels
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="channelId != null" >
        channelId,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="channelOrder != null" >
        channelOrder,
      </if>
      <if test="channelType != null" >
        channelType,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="status != null" >
        status
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="channelId != null" >
        #{channelId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="channelOrder != null" >
        #{channelOrder,jdbcType=INTEGER},
      </if>
      <if test="channelType != null" >
        #{channelType,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhishun.zaotoutiao.core.model.entity.Channels" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update channels
    <set >
      <if test="channelId != null" >
        channelId = #{channelid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="channelOrder != null" >
        channelOrder = #{channelOrder,jdbcType=INTEGER},
      </if>
      <if test="channelType != null" >
        channelType = #{channelType,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER}
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhishun.zaotoutiao.core.model.entity.Channels" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update channels
    set channelId = #{channelId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      channelOrder = #{channelOrder,jdbcType=INTEGER},
      channelType = #{channelType,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="listChannelsPage" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from channels
    <where>
      <if test="name != null">
        name LIKE CONCAT('%', #{name}, '%')
      </if>
      <if test="status != null">
        and status = #{status}
      </if>
    </where>
    <if test="offset !=null and limit !=null">
      limit #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
    </if>
  </select>

  <select id="countChannels" resultType="int" parameterType="map">
    SELECT
    count(id)
    FROM channels
    <where>
      <if test="name != null">
        name LIKE CONCAT('%', #{name}, '%')
      </if>
      <if test="status != null">
        and status = #{status}
      </if>
    </where>
  </select>
</mapper>