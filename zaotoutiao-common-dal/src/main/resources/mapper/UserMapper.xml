<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhishun.zaotoutiao.dal.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.zhishun.zaotoutiao.core.model.vo.UserVO" >
      <id column="userId" jdbcType="BIGINT" javaType="java.lang.Long" />
      <result column="name" property="name" jdbcType="VARCHAR" />
      <result column="nickName" property="nickName" jdbcType="VARCHAR"  />
      <result column="telephone" property="telephone" jdbcType="VARCHAR" />
      <result column="account" property="account" jdbcType="VARCHAR"  />
      <result column="password" property="password" jdbcType="VARCHAR"  />
      <result column="parentId" property="parentId" jdbcType="BIGINT"  />
      <result column="gold" property="gold" jdbcType="BIGINT" />
      <result column="money" property="money" jdbcType="DECIMAL" />
      <result column="headpath" property="headPath" jdbcType="VARCHAR" />
      <result column="birthday" property="birthday" jdbcType="VARCHAR" />
      <result column="sex" property="sex" jdbcType="INTEGER" />
      <result column="myInvitation" property="myInvitation" jdbcType="VARCHAR" />
      <result column="isOnline" property="isOnline" jdbcType="TINYINT"  />
      <result column="create_date" property="createDate" jdbcType="TIMESTAMP"  />
      <result column="job" property="job" jdbcType="VARCHAR"  />
      <result column="educational" property="educational" jdbcType="VARCHAR" />
      <result column="last_visit_date" property="lastVisitDate" jdbcType="TIMESTAMP" />
      <result column="code" property="code" jdbcType="VARCHAR"  />
      <result column="push_time_1" property="pushTime1" jdbcType="TIME"  />
      <result column="push_time_2" property="pushTime2" jdbcType="TIME"  />
      <result column="push_time_3" property="pushTime3" jdbcType="TIME" />
      <result column="push_time_4" property="pushTime4" jdbcType="TIME"  />
      <result column="wechatId" property="wechatId" jdbcType="VARCHAR"  />
      <result column="oppenId" property="oppenId" jdbcType="VARCHAR" />
      <result column="platform_id" property="platformId" jdbcType="INTEGER" />
      <result column="channel_id" property="channelId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    userId, name, nickName, telephone, account, password, parentId, gold, money, headpath, 
    birthday, sex, myInvitation, isOnline, create_date, job, educational, last_visit_date, 
    code, push_time_1, push_time_2, push_time_3, push_time_4, wechatId, oppenId, platform_id,
    channel_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user
    where userId = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user
    where userId = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zhishun.zaotoutiao.core.model.entity.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user (userId, name, nickName, 
      telephone, account, password, 
      parentId, gold, money, 
      headpath, birthday, sex, 
      myInvitation, isOnline, create_date, 
      job, educational, last_visit_date, 
      code, push_time_1, push_time_2, 
      push_time_3, push_time_4, wechatId, 
      oppenId, platform_id, channelId)
    values (#{userId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR},
      #{telephone,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=BIGINT}, #{gold,jdbcType=BIGINT}, #{money,jdbcType=DECIMAL},
      #{headPath,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER},
      #{myInvitation,jdbcType=VARCHAR}, #{isOnline,jdbcType=TINYINT}, #{createDate,jdbcType=TIMESTAMP},
      #{job,jdbcType=VARCHAR}, #{educational,jdbcType=VARCHAR}, #{lastVisitDate,jdbcType=TIMESTAMP}, 
      #{code,jdbcType=VARCHAR}, #{pushTime1,jdbcType=TIME}, #{pushTime2,jdbcType=TIME}, 
      #{pushTime3,jdbcType=TIME}, #{pushTime4,jdbcType=TIME}, #{wechatId,jdbcType=VARCHAR},
      #{oppenId,jdbcType=VARCHAR}, #{platformId, jdbcType=INTEGER}, #{channelId, jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zhishun.zaotoutiao.core.model.entity.User" useGeneratedKeys="true" keyProperty="userId" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        userId,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="nickname != null" >
        nickName,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="parentid != null" >
        parentId,
      </if>
      <if test="gold != null" >
        gold,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="headPath != null" >
        headpath,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="myInvitation != null" >
        myInvitation,
      </if>
      <if test="isOnline != null" >
        isOnline,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="job != null" >
        job,
      </if>
      <if test="educational != null" >
        educational,
      </if>
      <if test="lastVisitDate != null" >
        last_visit_date,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="pushTime1 != null" >
        push_time_1,
      </if>
      <if test="pushTime2 != null" >
        push_time_2,
      </if>
      <if test="pushTime3 != null" >
        push_time_3,
      </if>
      <if test="pushTime4 != null" >
        push_time_4,
      </if>
      <if test="wechatId != null" >
        wechatId,
      </if>
      <if test="oppenId != null" >
        oppenId,
      </if>
      <if test="platformId != null" >
        platform_id,
      </if>
      <if test="channelId != null" >
        channel_id
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="gold != null" >
        #{gold,jdbcType=BIGINT},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="headPath != null" >
        #{headPath,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="myInvitation != null" >
        #{myInvitation,jdbcType=VARCHAR},
      </if>
      <if test="isOnline != null" >
        #{isOnline,jdbcType=TINYINT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="job != null" >
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="educational != null" >
        #{educational,jdbcType=VARCHAR},
      </if>
      <if test="lastVisitDate != null" >
        #{lastVisitDate,jdbcType=TIMESTAMP},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="pushTime1 != null" >
        #{pushTime1,jdbcType=TIME},
      </if>
      <if test="pushTime2 != null" >
        #{pushTime2,jdbcType=TIME},
      </if>
      <if test="pushTime3 != null" >
        #{pushTime3,jdbcType=TIME},
      </if>
      <if test="pushTime4 != null" >
        #{pushTime4,jdbcType=TIME},
      </if>
      <if test="wechatId != null" >
        #{wechatId,jdbcType=VARCHAR},
      </if>
      <if test="oppenId != null" >
        #{oppenId,jdbcType=VARCHAR},
      </if>
      <if test="platformId != null" >
        #{platformId, jdbcType=INTEGER},
      </if>
      <if test="channelId != null" >
        #{channelId, jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhishun.zaotoutiao.core.model.entity.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nickName = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parentId = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="gold != null" >
        gold = #{gold,jdbcType=BIGINT},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="headPath != null" >
        headpath = #{headPath,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="myInvitation != null" >
        myInvitation = #{myInvitation,jdbcType=VARCHAR},
      </if>
      <if test="isOnline != null" >
        isOnline = #{isOnline,jdbcType=TINYINT},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="job != null" >
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="educational != null" >
        educational = #{educational,jdbcType=VARCHAR},
      </if>
      <if test="lastVisitDate != null" >
        last_visit_date = #{lastVisitDate,jdbcType=TIMESTAMP},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="pushTime1 != null" >
        push_time_1 = #{pushTime1,jdbcType=TIME},
      </if>
      <if test="pushTime2 != null" >
        push_time_2 = #{pushTime2,jdbcType=TIME},
      </if>
      <if test="pushTime3 != null" >
        push_time_3 = #{pushTime3,jdbcType=TIME},
      </if>
      <if test="pushTime4 != null" >
        push_time_4 = #{pushTime4,jdbcType=TIME},
      </if>
      <if test="wechatId != null" >
        wechatId = #{wechatId,jdbcType=VARCHAR},
      </if>
      <if test="oppenId != null" >
        oppenId = #{oppenId,jdbcType=VARCHAR},
      </if>
      <if test="platformId != null">
        platform_id = #{platformId, jdbcType=INTEGER},
      </if>
      <if test="channelId != null">
        channel_id = #{channelId, jdbcType=INTEGER}
      </if>
    </set>
    where userId = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhishun.zaotoutiao.core.model.entity.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    set name = #{name,jdbcType=VARCHAR},
      nickName = #{nickName,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      parentId = #{parentId,jdbcType=BIGINT},
      gold = #{gold,jdbcType=BIGINT},
      money = #{money,jdbcType=DECIMAL},
      headpath = #{headPath,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      myInvitation = #{myInvitation,jdbcType=VARCHAR},
      isOnline = #{isOnline,jdbcType=TINYINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      job = #{job,jdbcType=VARCHAR},
      educational = #{educational,jdbcType=VARCHAR},
      last_visit_date = #{lastVisitDate,jdbcType=TIMESTAMP},
      code = #{code,jdbcType=VARCHAR},
      push_time_1 = #{pushTime1,jdbcType=TIME},
      push_time_2 = #{pushTime2,jdbcType=TIME},
      push_time_3 = #{pushTime3,jdbcType=TIME},
      push_time_4 = #{pushTime4,jdbcType=TIME},
      wechatId = #{wechatId,jdbcType=VARCHAR},
      oppenId = #{oppenId,jdbcType=VARCHAR},
      platform_id = #{platformId,jdbcType=INTEGER},
      channel_id = #{channelId,jdbcType=INTEGER}
    where userId = #{userId,jdbcType=BIGINT}
  </update>

  <select id="getUserByMap" resultMap="BaseResultMap" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from user
    <where>
      <if test="telephone != null">
        telephone = #{telephone}
      </if>
      <if test="password != null">
        and password = #{password}
      </if>
      <if test="nickName != null">
        and nickName = #{nickName}
      </if>
      <if test="myInvitation != null">
        and myInvitation = #{myInvitation}
      </if>
      <if test="userId != null">
        and userId = #{userId}
      </if>
      <if test="parentId != null">
        and parentId = #{parentId}
      </if>
      <if test="wechatId != null">
        and wechatId = #{wechatId}
      </if>
    </where>
  </select>

  <select id="getApprentice" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where parentId = #{userId,jdbcType=BIGINT}
    <if test="offset !=null and limit !=null">
      limit #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
    </if>
  </select>

  <select id="countApprentice" parameterType="map" resultType="int" >
    select count(userId)
    from user
    where parentId = #{userId,jdbcType=BIGINT}
  </select>

  <select id="getWakeUpApprenticePage" parameterType="map" resultMap="BaseResultMap">
    SELECT userId,name,telephone,parentId,nickName,headpath ,
    floor((now()-last_visit_date)/(3600*24)) as spanDays
    FROM user WHERE parentId != 0 AND userId in (
    SELECT userId from user where parentId = #{userId}  AND  (now()-last_visit_date)/(3600*24) > 3 )
    LIMIT #{offset},50
  </select>

  <select id="countWakeUpApprentice" parameterType="map" resultType="int">
    SELECT count(userId)
    FROM user WHERE parentId != 0 AND userId in (
    SELECT userId from user where parentId = #{userId}  AND  (now()-last_visit_date)/(3600*24) > 3 )
  </select>

  <select id="isSurpassingActivtiy" parameterType="map" resultMap="BaseResultMap">
    SELECT * FROM user WHERE TO_DAYS( NOW( ) ) - TO_DAYS( create_date) > #{readActivityDays} AND userId = #{userId}
  </select>

  <select id="isParentFirstRecruit" parameterType="long" resultMap="BaseResultMap">
    SELECT * FROM user_gold_record WHERE userId = #{userId} AND source = 6 OR source = 9
  </select>

  <select id="getApprenticeSum" parameterType="long" resultType="int">
    select count(*) as count from user where user.parentId = #{parentId}
  </select>

  <select id="isSurpassingActivity" parameterType="map" resultType="int">
    SELECT count(0) from user
    WHERE (TO_DAYS( NOW( ) ) - TO_DAYS( create_date)) &lt; #{readActivityDays} AND userId = #{userId}
  </select>



  <select id="listUserCount" parameterType="map" resultMap="BaseResultMap">
    <if test='type == "today"'>
      select DATE_FORMAT(create_date,'%Y-%m-%d:%H') times, count(userId) as notLoginNum from user
      WHERE isOnline=1
        <if test="platformId != null">
          and platform_id = #{platformId}
        </if>
        <if test="channelId != null">
          and channel_id = #{channelId}
        </if>
      and DateDiff(now(),create_date)=0
      group by times
    </if>
    <if test='type == "yesterday"'>
      select DATE_FORMAT(create_date,'%Y-%m-%d:%H') times, count(userId) as notLoginNum from user
      WHERE isOnline=1
        <if test="platformId != null">
          and platform_id = #{platformId}
        </if>
        <if test="channelId != null">
          and channel_id = #{channelId}
        </if>
      and DateDiff(now(),create_date) = 1
      group by times
    </if>
    <if test='type == "sevenDays"'>
      select DATE_FORMAT(create_date,'%Y-%m-%d') times, count(userId) as notLoginNum from user
      WHERE isOnline=1
        <if test="platformId != null">
          and platform_id = #{platformId}
        </if>
        <if test="channelId != null">
          and channel_id = #{channelId}
        </if>
      and DateDiff(now(),create_date) &lt;=7
      group by times
    </if>
    <if test='type == "thirtyDays"'>
      select DATE_FORMAT(create_date,'%Y-%m-%d') times, count(userId) as notLoginNum from user
      WHERE isOnline=1
        <if test="platformId != null">
          and platform_id = #{platformId}
        </if>
        <if test="channelId != null">
          and channel_id = #{channelId}
        </if>
      and DateDiff(now(),create_date) &lt;=30
      group by times
    </if>
    <if test='type == "weeks"'>
      select DATE_FORMAT(create_date,'%Y-%u') times, count(userId) as notLoginNum from user
      WHERE isOnline=1
        <if test="platformId != null">
          and platform_id = #{platformId}
        </if>
        <if test="channelId != null">
          and channel_id = #{channelId}
        </if>
        <if test="startDate != null">
          and create_date &gt;= #{startDate}
        </if>
        <if test="endDate != null">
          and create_date &lt;= #{endDate}
        </if>
      group by times;
    </if>
    <if test='type == "months"'>
      select DATE_FORMAT(create_date,'%Y-%m') times, count(userId) as notLoginNum from user
      WHERE isOnline=1
        <if test="platformId != null">
          and platform_id = #{platformId}
        </if>
        <if test="channelId != null">
          and channel_id = #{channelId}
        </if>
        <if test="startDate != null">
          and create_date &gt;= #{startDate}
        </if>
        <if test="endDate != null">
          and create_date &lt;= #{endDate}
        </if>
      group by times;
    </if>
    <if test='type == "days"'>
      select DATE_FORMAT(create_date,'%Y-%m-%d') times, count(userId) as notLoginNum from user
      WHERE isOnline=1
        <if test="platformId != null">
          and platform_id = #{platformId}
        </if>
        <if test="channelId != null">
          and channel_id = #{channelId}
        </if>
        <if test="startDate != null">
          and create_date &gt;= #{startDate}
        </if>
        <if test="endDate != null">
          and create_date &lt;= #{endDate}
        </if>
      group by times;
    </if>
    <if test='type == "hours"'>
      select DATE_FORMAT(create_date,'%Y-%m-%d:%H') times, count(userId) as notLoginNum from user
      WHERE isOnline=1
        <if test="platformId != null">
          and platform_id = #{platformId}
        </if>
        <if test="channelId != null">
          and channel_id = #{channelId}
        </if>
        <if test="startDate != null">
          and create_date &gt;= #{startDate}
        </if>
        <if test="endDate != null">
          and create_date &lt;= #{endDate}
        </if>
      group by times;
    </if>
  </select>

  <select id="countUserGoldAndMoney" parameterType="map" resultType="map">
      SELECT count(userId) as userCount, SUM(money) as moneyNum FROM USER
      WHERE money &gt;= 30
      <if test="channelId != null">
        and channel_id = #{channelId}
      </if>
      <if test="type != null">
        <if test='type == "today"'>
          and DateDiff(now(),create_date)=0
        </if>
        <if test='type == "yesterday"'>
          and DateDiff(now(),create_date) = 1
        </if>
        <if test='type == "sevenDays"'>
          and DateDiff(now(),create_date) &lt;=7
        </if>
        <if test='type == "thirtyDays"'>
          and DateDiff(now(),create_date) &lt;=30
        </if>
      </if>
      <if test="startDate != null">
        and create_date &gt;= #{startDate}
      </if>
      <if test="endDate != null">
        and create_date &lt;= #{endDate}
      </if>
  </select>

  <select id="listCanBePresentedUser" parameterType="map" resultMap="BaseResultMap">
    select * from USER  where money &gt;= 30
    <if test="keyWord != null">
        and (nickName LIKE CONCAT('%', #{keyWord}, '%') || telephone LIKE CONCAT('%', #{keyWord}, '%'))
    </if>
    <if test="channelId != null">
        and channel_id = #{channelId}
    </if>
    <if test="createDate != null">
        and create_date = #{createDate}
    </if>
    <if test="money != null">
        and money LIKE CONCAT('%', #{money}, '%')
    </if>
    <if test="offset != null and limit != null">
      limit #{offset},#{limit}
    </if>
  </select>

  <select id="countCanBePresentedUser" parameterType="map" resultType="int">
    select count(0) from USER  where money &gt;= 30
    <if test="keyWord != null">
      and (nickName LIKE CONCAT('%', #{keyWord}, '%') || telephone LIKE CONCAT('%', #{keyWord}, '%'))
    </if>
    <if test="channelId != null">
      and channel_id = #{channelId}
    </if>
    <if test="createDate != null">
      and create_date = #{createDate}
    </if>
    <if test="money != null">
      and money LIKE CONCAT('%', #{money}, '%')
    </if>
  </select>
</mapper>