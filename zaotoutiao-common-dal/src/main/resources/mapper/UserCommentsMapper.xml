<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhishun.zaotoutiao.dal.mapper.UserCommentsMapper">
  <resultMap id="BaseResultMap" type="com.zhishun.zaotoutiao.core.model.entity.UserComments">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="infoId" jdbcType="VARCHAR" property="infoId" />
    <result column="userId" jdbcType="BIGINT" property="userId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
    <result column="likes" jdbcType="INTEGER" property="likes" />
  </resultMap>
  <sql id="Base_Column_List">
    id, infoId, userId, content, createDate, likes
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_comments
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_comments
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zhishun.zaotoutiao.core.model.entity.UserComments">
    insert into user_comments (id, infoId, userId, 
      content, createDate, likes
      )
    values (#{id,jdbcType=BIGINT}, #{infoId,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT},
      #{content,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{likes,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhishun.zaotoutiao.core.model.entity.UserComments">
    insert into user_comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="infoId != null">
        infoId,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
      <if test="likes != null">
        likes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="infoId != null">
        #{infoId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="likes != null">
        #{likes,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhishun.zaotoutiao.core.model.entity.UserComments">
    update user_comments
    <set>
      <if test="infoId != null">
        infoId = #{infoId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        userId = #{userId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="likes != null">
        likes = #{likes,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhishun.zaotoutiao.core.model.entity.UserComments">
    update user_comments
    set infoId = #{infoId,jdbcType=VARCHAR},
      userId = #{userId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      likes = #{likes,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getUserCommnetsInfo" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_comments
    where id = #{id,jdbcType=BIGINT}
    <if test="userId != null">
      and userId = #{userId}
    </if>
  </select>

  <delete id="delUserComments" parameterType="map">
    delete from user_comments
    where userId = #{userId}
    <if test="id != null">
      and id = #{id}
    </if>
  </delete>

  <select id="getUserCommentsByInfoId" parameterType="string" resultMap="BaseResultMap">
    select * from user_comments WHERE infoId = #{infoId}
  </select>

  <select id="countUserComments" parameterType="string" resultType="int">
    select count(*) as comments_num from user_comments WHERE infoId = #{infoId}
  </select>

  <select id="getCommentsNumByInfoId" parameterType="java.lang.String" resultType="int">
    select count(0) FROM user_comments
    WHERE infoId = #{infoId}
  </select>
</mapper>